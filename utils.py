import streamlit as st

def auto_column_mapper(df):
    """
    рдХреЛрдгрддреНрдпрд╛рд╣реА CSV рдордзреНрдпреЗ рдЕрдкреЗрдХреНрд╖рд┐рдд рдХреЙрд▓рдореНрд╕ рд╢реЛрдзреВрди rename рдХрд░рдгрд╛рд░реЗ рдлрдВрдХреНрд╢рди.
    рд╡рд╛рдкрд░рдХрд░реНрддреНрдпрд╛рд▓рд╛ рдорд░рд╛рдареАрдд рд╕рдВрджреЗрд╢ рджреЗрддреЛ рдЖрдгрд┐ fallback logic рд╡рд╛рдкрд░рддреЛ.
    """

    # тЬЕ рдЕрдкреЗрдХреНрд╖рд┐рдд рдХреЙрд▓рдореНрд╕ рдЖрдгрд┐ рддреНрдпрд╛рдВрдЪреЗ рд╕рдВрднрд╛рд╡реНрдп рдкрд░реНрдпрд╛рдп
    column_map = {
        "stock": ["stock", "symbol", "company"],
        "sector": ["sector", "industry", "segment"],
        "rsi": ["rsi", "rsi value"],
        "macd": ["macd", "macd signal", "macd line", "macd histogram"],
        "sector trend": ["sector trend", "trend", "sector outlook"]
    }

    # ЁЯУЛ Normalize рдХреЙрд▓рдореНрд╕
    df.columns = df.columns.str.strip().str.lower()

    # ЁЯФБ Rename logic
    renamed = {}
    for expected, options in column_map.items():
        for actual in options:
            if actual in df.columns:
                renamed[actual] = expected
                break

    df.rename(columns=renamed, inplace=True)

    # ЁЯЫбя╕П Missing рдХреЙрд▓рдореНрд╕ рддрдкрд╛рд╕рд╛
    missing = [col for col in column_map if col not in df.columns]
    if missing:
        st.warning("тЪая╕П рдХрд╛рд╣реА рдЕрдкреЗрдХреНрд╖рд┐рдд рдХреЙрд▓рдо рд╕рд╛рдкрдбрд▓реЗ рдирд╛рд╣реАрдд: " + ", ".join(missing))

    return df
